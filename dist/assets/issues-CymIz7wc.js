import{ab as r,i as t}from"./index-BzaUVgPz.js";const u=r("issues",{state:()=>({issues:[],issue:{},filters:{search:"",status:null,priority:null,tags:[],page:1,perPage:10},pagination:null,isLoading:!1}),actions:{async fetchIssues(){this.isLoading=!0;try{const s=await t.get("/issues",{query:{search:this.filters.search||void 0,status:this.filters.status||void 0,priority:this.filters.priority||void 0,tags:this.filters.tags.length?this.filters.tags:void 0,page:this.filters.page,per_page:this.filters.perPage}});this.issues=s.issues,this.pagination=s.pagination}finally{this.isLoading=!1}},async createIssue(s){this.isLoading=!0;try{const i=(await t.post("/issues",s)).data;return this.issues.unshift(i),i}finally{this.isLoading=!1}},async updateIssue(s,i){this.isLoading=!0;try{await t.patch(`/issues/${s}`,i),await this.fetchIssue(s)}finally{this.isLoading=!1}},async updateIssueStatus(s,i){this.isLoading=!0;try{await t.patch(`/issues/${s}`,{status:i}),await this.fetchIssue(s)}finally{this.isLoading=!1}},async fetchIssue(s){this.issue=(await t.get(`/issues/${s}`)).issue},async deleteIssue(s){this.isLoading=!0;try{await t.delete(`/issues/${s}`),this.issues=this.issues.filter(i=>i.id!==s)}finally{this.isLoading=!1}},async addAssignee(s,i,e){try{await t.post(`/issues/${s}/assignees`,{type:i,assignee_ids:e}),await this.fetchIssue(s)}catch(a){console.error(a)}},async removeAssignee(s,i,e){try{await t.delete(`/issues/${s}/assignees/${e}`,{body:{type:i}}),await this.fetchIssue(s)}catch(a){console.error(a)}},updateFilters(s){this.filters={...this.filters,...s,page:1}}}});export{u};
